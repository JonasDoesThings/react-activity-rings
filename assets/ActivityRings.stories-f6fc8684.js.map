{"version":3,"file":"ActivityRings.stories-f6fc8684.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../src/components/ActivityRings.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import React from 'react';\nimport type {ActivityRing, ActivityRingContainerOptions} from '../types';\nimport * as styles from './ActivityRings.module.css';\n\ninterface ActivityRingsProps {\n    rings: ActivityRing[];\n    options?: ActivityRingContainerOptions;\n}\n\nconst defaultOptions: ActivityRingContainerOptions = {\n  containerHeight: '100%',\n  containerWidth: '100%',\n  paddingBetweenRings: 0.75,\n  initialRadius: 30,\n  animationDurationMillis: 1000,\n  animationTimingFunction: 'ease-in-out',\n  backgroundOpacity: 0.4,\n};\n\nexport default function ActivityRings(props: ActivityRingsProps) {\n  const options = Object.assign({}, defaultOptions, props.options) as Required<ActivityRingContainerOptions>;\n\n  const totalRingRadius = props.rings.reduce((totalWidth, ring) =>\n    totalWidth + (ring.ringWidth ?? 12) + options.paddingBetweenRings,\n  0);\n  const viewBoxSize = 2 * (options.initialRadius + totalRingRadius);\n\n  // pre-calculate the sum of all more-inner rings for the rings, so we can size the more outer rings correctly\n  const summedUpRingWidths = props.rings.map((sum => ring => sum += (ring.ringWidth ?? 12))(0));\n\n  return (\n    <svg viewBox={`0 0 ${viewBoxSize} ${viewBoxSize}`} height={options.containerHeight} width={options.containerWidth}>\n      <g>\n        {props.rings.map((ring, index) => (\n          <InnerActivityRing\n            key={index}\n            index={index}\n            ring={ring}\n            options={options}\n            summedUpRingWidthsBefore={index === 0 ? 0 : summedUpRingWidths[index-1]}\n          />\n        ))}\n      </g>\n    </svg>\n  );\n}\n\ninterface InnerActivityRingProps {\n  // the index of the ring, where 0 is the innermost\n  index: number;\n  // the ActivityRing properties object\n  ring: ActivityRing;\n  // the ActivityRingContainer options object\n  options: Required<ActivityRingContainerOptions>;\n  // the summed up ring widths of all before rings, used for sizing the ring correctly in respect to the other more inner-rings\n  summedUpRingWidthsBefore: number;\n}\n\nfunction InnerActivityRing(props: InnerActivityRingProps) {\n  const ringWidth = props.ring.ringWidth ?? 12;\n  const radius = props.options.initialRadius + props.summedUpRingWidthsBefore + ringWidth/2 + (props.index * props.options.paddingBetweenRings);\n  const dashArrayPart = (Math.min(0.999, props.ring.filledPercentage)) * (2*radius*Math.PI);\n\n  return (\n    <>\n      <circle cx='50%' cy='50%' r={radius} stroke={props.ring.backgroundColor ?? props.ring.color} strokeOpacity={props.options.backgroundOpacity} strokeWidth={12} className={styles.innerActivityRingBackground} />\n      <circle cx='50%' cy='50%' r={radius} strokeDasharray={`${dashArrayPart} ${'9'.repeat(props.index+4)}`} stroke={props.ring.color} strokeWidth={12} style={{animationDuration: `${props.options.animationDurationMillis}ms`, animationTimingFunction: props.options.animationTimingFunction}} className={styles.innerActivityRing} />\n      <circle cx='50%' cy='50%' r={radius} stroke={props.ring.backgroundColor ?? props.ring.color} strokeOpacity={props.options.backgroundOpacity} strokeWidth={ringWidth} className={styles.innerActivityRingBackground} />\n      <circle cx='50%' cy='50%' r={radius} strokeDasharray={`${dashArrayPart} ${'9'.repeat(props.index+4)}`} stroke={props.ring.color} strokeWidth={ringWidth} style={{animationDuration: `${props.options.animationDurationMillis}ms`, animationTimingFunction: props.options.animationTimingFunction}} className={styles.innerActivityRing} />\n    </>\n  );\n}\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","defaultOptions","ActivityRings","props","options","totalRingRadius","totalWidth","ring","viewBoxSize","summedUpRingWidths","sum","jsx","index","InnerActivityRing","ringWidth","radius","dashArrayPart","jsxs","Fragment","styles.innerActivityRingBackground","styles.innerActivityRing"],"mappings":"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","x_google_ignoreList":[0,1]}